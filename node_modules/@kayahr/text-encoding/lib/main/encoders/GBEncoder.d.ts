import { AbstractEncoder } from "../AbstractEncoder.js";
import { ByteBuffer } from "../ByteBuffer.js";
/**
 * Returns the index for the given code point.
 *
 * @param codePoint - The code point to search for.
 * @return The found index or null if not found.
 */
export declare function getIndex(codePoint: number): number;
/**
 * Base class for gb18030 and gbk encoders.
 */
export declare abstract class GBEncoder extends AbstractEncoder {
    private readonly gbkFlag;
    /**
     * @param gbkFlag - True for gbk encoding, false for gb18030 encoding.
     */
    protected constructor(gbkFlag?: boolean);
    /** @inheritDoc */
    encode(buffer: ByteBuffer): number | number[];
}
/**
 * Encoder for gb18030 encoding.
 */
export declare class GB18030Encoder extends GBEncoder {
    /** @inheritDoc */
    constructor();
}
/**
 * Encoder for gbk encoding.
 */
export declare class GBKEncoder extends GBEncoder {
    /** @inheritDoc */
    constructor();
}
